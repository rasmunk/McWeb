# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  ''      $server_port;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}

# Set appropriate X-Forwarded-Ssl header
map $scheme $proxy_x_forwarded_ssl {
  default off;
  https on;
}

log_format mcwebhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';
access_log off;

upstream mcweb.test {
    server mcweb:80;
}

#server {
#    listen 8000;
#    server_name mcweb.test;
#    access_log /var/log/nginx/mcweb.log mcwebhost;
#
#    location / {
#         proxy_pass http://mcweb.test;
##          proxy_redirect     off;
##          proxy_set_header   Host $host;
##          proxy_set_header   X-Real-IP $remote_addr;
##          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
##          proxy_set_header   X-Forwarded-Host $server_name;
#    }
#}

server {
    listen 80 default_server;
    server_name mcweb.test;
    access_log /var/log/nginx/mcweb.log mcwebhost;

    location / {
         proxy_pass http://mcweb.test;
#          proxy_redirect     off;
#          proxy_set_header   Host $host;
#          proxy_set_header   X-Real-IP $remote_addr;
#          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#          proxy_set_header   X-Forwarded-Host $server_name;
    }
}
#
#server {
#    listen 80 default_server;
#    server_name "";
#    return 444;
#}
